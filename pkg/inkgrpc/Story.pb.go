// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: Story.proto

package inkgrpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NewStoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ink *structpb.Struct `protobuf:"bytes,1,opt,name=ink,proto3" json:"ink,omitempty"`
}

func (x *NewStoryRequest) Reset() {
	*x = NewStoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Story_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewStoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewStoryRequest) ProtoMessage() {}

func (x *NewStoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Story_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewStoryRequest.ProtoReflect.Descriptor instead.
func (*NewStoryRequest) Descriptor() ([]byte, []int) {
	return file_Story_proto_rawDescGZIP(), []int{0}
}

func (x *NewStoryRequest) GetInk() *structpb.Struct {
	if x != nil {
		return x.Ink
	}
	return nil
}

type NewStoryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *NewStoryReply) Reset() {
	*x = NewStoryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Story_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewStoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewStoryReply) ProtoMessage() {}

func (x *NewStoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_Story_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewStoryReply.ProtoReflect.Descriptor instead.
func (*NewStoryReply) Descriptor() ([]byte, []int) {
	return file_Story_proto_rawDescGZIP(), []int{1}
}

func (x *NewStoryReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ContinueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ContinueRequest) Reset() {
	*x = ContinueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Story_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContinueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContinueRequest) ProtoMessage() {}

func (x *ContinueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Story_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContinueRequest.ProtoReflect.Descriptor instead.
func (*ContinueRequest) Descriptor() ([]byte, []int) {
	return file_Story_proto_rawDescGZIP(), []int{2}
}

func (x *ContinueRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ContinueReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Story *StoryState `protobuf:"bytes,1,opt,name=story,proto3" json:"story,omitempty"`
}

func (x *ContinueReply) Reset() {
	*x = ContinueReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Story_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContinueReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContinueReply) ProtoMessage() {}

func (x *ContinueReply) ProtoReflect() protoreflect.Message {
	mi := &file_Story_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContinueReply.ProtoReflect.Descriptor instead.
func (*ContinueReply) Descriptor() ([]byte, []int) {
	return file_Story_proto_rawDescGZIP(), []int{3}
}

func (x *ContinueReply) GetStory() *StoryState {
	if x != nil {
		return x.Story
	}
	return nil
}

type ChooseChoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ChoiceIndex int32  `protobuf:"varint,2,opt,name=choiceIndex,proto3" json:"choiceIndex,omitempty"`
}

func (x *ChooseChoiceRequest) Reset() {
	*x = ChooseChoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Story_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChooseChoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChooseChoiceRequest) ProtoMessage() {}

func (x *ChooseChoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Story_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChooseChoiceRequest.ProtoReflect.Descriptor instead.
func (*ChooseChoiceRequest) Descriptor() ([]byte, []int) {
	return file_Story_proto_rawDescGZIP(), []int{4}
}

func (x *ChooseChoiceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChooseChoiceRequest) GetChoiceIndex() int32 {
	if x != nil {
		return x.ChoiceIndex
	}
	return 0
}

type ChooseChoiceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ChooseChoiceReply) Reset() {
	*x = ChooseChoiceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Story_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChooseChoiceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChooseChoiceReply) ProtoMessage() {}

func (x *ChooseChoiceReply) ProtoReflect() protoreflect.Message {
	mi := &file_Story_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChooseChoiceReply.ProtoReflect.Descriptor instead.
func (*ChooseChoiceReply) Descriptor() ([]byte, []int) {
	return file_Story_proto_rawDescGZIP(), []int{5}
}

func (x *ChooseChoiceReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type StoryState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text        string    `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	CanContinue bool      `protobuf:"varint,2,opt,name=canContinue,proto3" json:"canContinue,omitempty"`
	Choices     []*Choice `protobuf:"bytes,3,rep,name=choices,proto3" json:"choices,omitempty"`
	CurrentTags []string  `protobuf:"bytes,4,rep,name=currentTags,proto3" json:"currentTags,omitempty"`
	GlobalTags  []string  `protobuf:"bytes,5,rep,name=globalTags,proto3" json:"globalTags,omitempty"`
}

func (x *StoryState) Reset() {
	*x = StoryState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Story_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoryState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoryState) ProtoMessage() {}

func (x *StoryState) ProtoReflect() protoreflect.Message {
	mi := &file_Story_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoryState.ProtoReflect.Descriptor instead.
func (*StoryState) Descriptor() ([]byte, []int) {
	return file_Story_proto_rawDescGZIP(), []int{6}
}

func (x *StoryState) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *StoryState) GetCanContinue() bool {
	if x != nil {
		return x.CanContinue
	}
	return false
}

func (x *StoryState) GetChoices() []*Choice {
	if x != nil {
		return x.Choices
	}
	return nil
}

func (x *StoryState) GetCurrentTags() []string {
	if x != nil {
		return x.CurrentTags
	}
	return nil
}

func (x *StoryState) GetGlobalTags() []string {
	if x != nil {
		return x.GlobalTags
	}
	return nil
}

type Choice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index int32  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Text  string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Choice) Reset() {
	*x = Choice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Story_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Choice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Choice) ProtoMessage() {}

func (x *Choice) ProtoReflect() protoreflect.Message {
	mi := &file_Story_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Choice.ProtoReflect.Descriptor instead.
func (*Choice) Descriptor() ([]byte, []int) {
	return file_Story_proto_rawDescGZIP(), []int{7}
}

func (x *Choice) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Choice) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type ListStoriesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoryTitles []string `protobuf:"bytes,1,rep,name=storyTitles,proto3" json:"storyTitles,omitempty"`
}

func (x *ListStoriesReply) Reset() {
	*x = ListStoriesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Story_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStoriesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStoriesReply) ProtoMessage() {}

func (x *ListStoriesReply) ProtoReflect() protoreflect.Message {
	mi := &file_Story_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStoriesReply.ProtoReflect.Descriptor instead.
func (*ListStoriesReply) Descriptor() ([]byte, []int) {
	return file_Story_proto_rawDescGZIP(), []int{8}
}

func (x *ListStoriesReply) GetStoryTitles() []string {
	if x != nil {
		return x.StoryTitles
	}
	return nil
}

type StartStoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoryTitle string `protobuf:"bytes,1,opt,name=storyTitle,proto3" json:"storyTitle,omitempty"`
}

func (x *StartStoryRequest) Reset() {
	*x = StartStoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Story_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartStoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartStoryRequest) ProtoMessage() {}

func (x *StartStoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Story_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartStoryRequest.ProtoReflect.Descriptor instead.
func (*StartStoryRequest) Descriptor() ([]byte, []int) {
	return file_Story_proto_rawDescGZIP(), []int{9}
}

func (x *StartStoryRequest) GetStoryTitle() string {
	if x != nil {
		return x.StoryTitle
	}
	return ""
}

var File_Story_proto protoreflect.FileDescriptor

var file_Story_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x49,
	0x6e, 0x6b, 0x47, 0x52, 0x50, 0x43, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x3c, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x03, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x03, 0x69, 0x6e, 0x6b, 0x22,
	0x1f, 0x0a, 0x0d, 0x4e, 0x65, 0x77, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x21, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x3a, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x49, 0x6e, 0x6b, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22,
	0x47, 0x0a, 0x13, 0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x2d, 0x0a, 0x11, 0x43, 0x68, 0x6f, 0x6f,
	0x73, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x72,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x12, 0x29, 0x0a, 0x07,
	0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x49, 0x6e, 0x6b, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x07,
	0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x54, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x54, 0x61, 0x67, 0x73, 0x22, 0x32, 0x0a, 0x06, 0x43, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x34, 0x0a,
	0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x73, 0x22, 0x33, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x32, 0xd1, 0x02, 0x0a, 0x05, 0x53, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x3c, 0x0a, 0x08, 0x4e, 0x65, 0x77, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x18,
	0x2e, 0x49, 0x6e, 0x6b, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x4e, 0x65, 0x77, 0x53, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x49, 0x6e, 0x6b, 0x47, 0x52,
	0x50, 0x43, 0x2e, 0x4e, 0x65, 0x77, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x40, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1a,
	0x2e, 0x49, 0x6e, 0x6b, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x49, 0x6e, 0x6b,
	0x47, 0x52, 0x50, 0x43, 0x2e, 0x4e, 0x65, 0x77, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x40, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x49, 0x6e, 0x6b, 0x47,
	0x52, 0x50, 0x43, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x3c, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65,
	0x12, 0x18, 0x2e, 0x49, 0x6e, 0x6b, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x69,
	0x6e, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x49, 0x6e, 0x6b,
	0x47, 0x52, 0x50, 0x43, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x48, 0x0a, 0x0c, 0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x43, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x12, 0x1c, 0x2e, 0x49, 0x6e, 0x6b, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x43, 0x68, 0x6f,
	0x6f, 0x73, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x49, 0x6e, 0x6b, 0x47, 0x52, 0x50, 0x43, 0x2e, 0x43, 0x68, 0x6f, 0x6f, 0x73,
	0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x0d, 0x5a, 0x0b,
	0x70, 0x6b, 0x67, 0x2f, 0x69, 0x6e, 0x6b, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_Story_proto_rawDescOnce sync.Once
	file_Story_proto_rawDescData = file_Story_proto_rawDesc
)

func file_Story_proto_rawDescGZIP() []byte {
	file_Story_proto_rawDescOnce.Do(func() {
		file_Story_proto_rawDescData = protoimpl.X.CompressGZIP(file_Story_proto_rawDescData)
	})
	return file_Story_proto_rawDescData
}

var file_Story_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_Story_proto_goTypes = []interface{}{
	(*NewStoryRequest)(nil),     // 0: InkGRPC.NewStoryRequest
	(*NewStoryReply)(nil),       // 1: InkGRPC.NewStoryReply
	(*ContinueRequest)(nil),     // 2: InkGRPC.ContinueRequest
	(*ContinueReply)(nil),       // 3: InkGRPC.ContinueReply
	(*ChooseChoiceRequest)(nil), // 4: InkGRPC.ChooseChoiceRequest
	(*ChooseChoiceReply)(nil),   // 5: InkGRPC.ChooseChoiceReply
	(*StoryState)(nil),          // 6: InkGRPC.StoryState
	(*Choice)(nil),              // 7: InkGRPC.Choice
	(*ListStoriesReply)(nil),    // 8: InkGRPC.ListStoriesReply
	(*StartStoryRequest)(nil),   // 9: InkGRPC.StartStoryRequest
	(*structpb.Struct)(nil),     // 10: google.protobuf.Struct
	(*emptypb.Empty)(nil),       // 11: google.protobuf.Empty
}
var file_Story_proto_depIdxs = []int32{
	10, // 0: InkGRPC.NewStoryRequest.ink:type_name -> google.protobuf.Struct
	6,  // 1: InkGRPC.ContinueReply.story:type_name -> InkGRPC.StoryState
	7,  // 2: InkGRPC.StoryState.choices:type_name -> InkGRPC.Choice
	0,  // 3: InkGRPC.Story.NewStory:input_type -> InkGRPC.NewStoryRequest
	9,  // 4: InkGRPC.Story.StartStory:input_type -> InkGRPC.StartStoryRequest
	11, // 5: InkGRPC.Story.ListStories:input_type -> google.protobuf.Empty
	2,  // 6: InkGRPC.Story.Continue:input_type -> InkGRPC.ContinueRequest
	4,  // 7: InkGRPC.Story.ChooseChoice:input_type -> InkGRPC.ChooseChoiceRequest
	1,  // 8: InkGRPC.Story.NewStory:output_type -> InkGRPC.NewStoryReply
	1,  // 9: InkGRPC.Story.StartStory:output_type -> InkGRPC.NewStoryReply
	8,  // 10: InkGRPC.Story.ListStories:output_type -> InkGRPC.ListStoriesReply
	3,  // 11: InkGRPC.Story.Continue:output_type -> InkGRPC.ContinueReply
	5,  // 12: InkGRPC.Story.ChooseChoice:output_type -> InkGRPC.ChooseChoiceReply
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_Story_proto_init() }
func file_Story_proto_init() {
	if File_Story_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Story_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewStoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Story_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewStoryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Story_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContinueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Story_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContinueReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Story_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChooseChoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Story_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChooseChoiceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Story_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoryState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Story_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Choice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Story_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStoriesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Story_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartStoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Story_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_Story_proto_goTypes,
		DependencyIndexes: file_Story_proto_depIdxs,
		MessageInfos:      file_Story_proto_msgTypes,
	}.Build()
	File_Story_proto = out.File
	file_Story_proto_rawDesc = nil
	file_Story_proto_goTypes = nil
	file_Story_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StoryClient is the client API for Story service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StoryClient interface {
	// Creates and starts a brand new story from the provided ink in json from
	NewStory(ctx context.Context, in *NewStoryRequest, opts ...grpc.CallOption) (*NewStoryReply, error)
	// Starts an existing story the server already knows about
	StartStory(ctx context.Context, in *StartStoryRequest, opts ...grpc.CallOption) (*NewStoryReply, error)
	ListStories(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ListStoriesReply, error)
	Continue(ctx context.Context, in *ContinueRequest, opts ...grpc.CallOption) (*ContinueReply, error)
	ChooseChoice(ctx context.Context, in *ChooseChoiceRequest, opts ...grpc.CallOption) (*ChooseChoiceReply, error)
}

type storyClient struct {
	cc grpc.ClientConnInterface
}

func NewStoryClient(cc grpc.ClientConnInterface) StoryClient {
	return &storyClient{cc}
}

func (c *storyClient) NewStory(ctx context.Context, in *NewStoryRequest, opts ...grpc.CallOption) (*NewStoryReply, error) {
	out := new(NewStoryReply)
	err := c.cc.Invoke(ctx, "/InkGRPC.Story/NewStory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storyClient) StartStory(ctx context.Context, in *StartStoryRequest, opts ...grpc.CallOption) (*NewStoryReply, error) {
	out := new(NewStoryReply)
	err := c.cc.Invoke(ctx, "/InkGRPC.Story/StartStory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storyClient) ListStories(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ListStoriesReply, error) {
	out := new(ListStoriesReply)
	err := c.cc.Invoke(ctx, "/InkGRPC.Story/ListStories", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storyClient) Continue(ctx context.Context, in *ContinueRequest, opts ...grpc.CallOption) (*ContinueReply, error) {
	out := new(ContinueReply)
	err := c.cc.Invoke(ctx, "/InkGRPC.Story/Continue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storyClient) ChooseChoice(ctx context.Context, in *ChooseChoiceRequest, opts ...grpc.CallOption) (*ChooseChoiceReply, error) {
	out := new(ChooseChoiceReply)
	err := c.cc.Invoke(ctx, "/InkGRPC.Story/ChooseChoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StoryServer is the server API for Story service.
type StoryServer interface {
	// Creates and starts a brand new story from the provided ink in json from
	NewStory(context.Context, *NewStoryRequest) (*NewStoryReply, error)
	// Starts an existing story the server already knows about
	StartStory(context.Context, *StartStoryRequest) (*NewStoryReply, error)
	ListStories(context.Context, *emptypb.Empty) (*ListStoriesReply, error)
	Continue(context.Context, *ContinueRequest) (*ContinueReply, error)
	ChooseChoice(context.Context, *ChooseChoiceRequest) (*ChooseChoiceReply, error)
}

// UnimplementedStoryServer can be embedded to have forward compatible implementations.
type UnimplementedStoryServer struct {
}

func (*UnimplementedStoryServer) NewStory(context.Context, *NewStoryRequest) (*NewStoryReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewStory not implemented")
}
func (*UnimplementedStoryServer) StartStory(context.Context, *StartStoryRequest) (*NewStoryReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartStory not implemented")
}
func (*UnimplementedStoryServer) ListStories(context.Context, *emptypb.Empty) (*ListStoriesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListStories not implemented")
}
func (*UnimplementedStoryServer) Continue(context.Context, *ContinueRequest) (*ContinueReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Continue not implemented")
}
func (*UnimplementedStoryServer) ChooseChoice(context.Context, *ChooseChoiceRequest) (*ChooseChoiceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChooseChoice not implemented")
}

func RegisterStoryServer(s *grpc.Server, srv StoryServer) {
	s.RegisterService(&_Story_serviceDesc, srv)
}

func _Story_NewStory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewStoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoryServer).NewStory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/InkGRPC.Story/NewStory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoryServer).NewStory(ctx, req.(*NewStoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Story_StartStory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartStoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoryServer).StartStory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/InkGRPC.Story/StartStory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoryServer).StartStory(ctx, req.(*StartStoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Story_ListStories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoryServer).ListStories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/InkGRPC.Story/ListStories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoryServer).ListStories(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Story_Continue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContinueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoryServer).Continue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/InkGRPC.Story/Continue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoryServer).Continue(ctx, req.(*ContinueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Story_ChooseChoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChooseChoiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoryServer).ChooseChoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/InkGRPC.Story/ChooseChoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoryServer).ChooseChoice(ctx, req.(*ChooseChoiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Story_serviceDesc = grpc.ServiceDesc{
	ServiceName: "InkGRPC.Story",
	HandlerType: (*StoryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewStory",
			Handler:    _Story_NewStory_Handler,
		},
		{
			MethodName: "StartStory",
			Handler:    _Story_StartStory_Handler,
		},
		{
			MethodName: "ListStories",
			Handler:    _Story_ListStories_Handler,
		},
		{
			MethodName: "Continue",
			Handler:    _Story_Continue_Handler,
		},
		{
			MethodName: "ChooseChoice",
			Handler:    _Story_ChooseChoice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "Story.proto",
}
